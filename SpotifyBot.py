import telebot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from telebot import types
from spotipy.oauth2 import SpotifyClientCredentials
import spotipy
from io import BytesIO
import requests


bot = telebot.TeleBot('TOKEN')

keyboard = InlineKeyboardMarkup()
button = InlineKeyboardButton(text="üîé –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ üîé", callback_data="start_search")
button1 = InlineKeyboardButton(text="üìß –°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º üìß", callback_data="write_developer")
button2 = InlineKeyboardButton(text="üéÅ –ò—Å—Ö–æ–¥–Ω–∏–∫–∏ üéÅ", callback_data="source_code")
keyboard.add(button)
keyboard.add(button1)
keyboard.add(button2)

keyboard1 = InlineKeyboardMarkup()
button3 = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å ‚ùå", callback_data="about")
keyboard1.add(button3)

keyboard2 = InlineKeyboardMarkup()
button3 = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å ‚ùå", callback_data="about")
button_url = InlineKeyboardButton(text='üìß –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É üìß', url='https://t.me/Codefer')
button4 = InlineKeyboardButton(text="üìù–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ãüìù", callback_data="quections")
keyboard2.add(button_url)
keyboard2.add(button4)
keyboard2.add(button3)

client_id = 'client_id'
client_secret = 'client_secret'

client_credentials_manager = SpotifyClientCredentials(client_id=client_id, client_secret=client_secret)
sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π!\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–π–¥–µ—Ç —Ç–µ–±–µ —Ç—Ä–µ–∫.\n–í—Å–µ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ - —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞.\n–í—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫ –ø–æ —Å–µ—Ä–≤–∏—Å—É Spotify. –ë–µ—Å–ø–ª–∞—Ç–Ω–æ, –±—ã—Å—Ç—Ä–æ –∏ —á–µ—Ç–∫–æ :)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _</b>", parse_mode ='HTML', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == "start_search")
def handle_callback(call):
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="<b>üìé–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–≤–∑–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞</b>", parse_mode ='HTML',reply_markup=keyboard1)

@bot.callback_query_handler(func=lambda call: call.data == "write_developer")
def handle_callback(call):
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="<b>–£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É?\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∫–æ–º.\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:</b>", parse_mode ='HTML', reply_markup=keyboard2)

@bot.callback_query_handler(func=lambda call: call.data == "source_code")
def handle_callback(call):
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="<b>–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n–°–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ—è–≤–∏—Ç—å—Å—è.</b>", parse_mode ='HTML',reply_markup=keyboard1)

@bot.callback_query_handler(func=lambda call: call.data == "about")
def handle_callback(call):
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="<b>–û—Ç–º–µ–Ω–µ–Ω–æ</b>", parse_mode ='HTML')

@bot.callback_query_handler(func=lambda call: call.data == "quections")
def handle_callback(call):
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n1. –ü–æ—á–µ–º—É —Ç—Ä–µ–∫–∏ –Ω–µ –¥–ª–∏–Ω–µ–µ 30 —Å–µ–∫?\n–û—Ç–≤–µ—Ç: –ù–µ –∑–Ω–∞—é. –≠—Ç–æ –¥–µ–ª–æ —Ä–∞–±–æ—Ç—ã Spotify, –æ–Ω–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –±–æ—Ç—É –≤–∞—à–∏ –∏—Å–∫–æ–º—ã–µ —Ç—Ä–µ–∫–∏. –≠—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∏—Ö, –∞ –Ω–µ –æ—Ç –±–æ—Ç–∞.\n2. –ú–æ–π —Ç—Ä–µ–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è!\n–û—Ç–≤–µ—Ç: –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —Ç–≤–æ–π —Ç—Ä–µ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ Spotify.",reply_markup=keyboard1)

@bot.message_handler(func=lambda message: True)
def search_track(message):
    bot.reply_to(message, "üîé")
    results = sp.search(message.text, type='track', limit=1)
    if results['tracks']['items']:
        track = results['tracks']['items'][0]
        track_name = track['name']
        track_artist = track['artists'][0]['name']
        track_url = track['external_urls']['spotify']
        reply_text = f"–¢—Ä–µ–∫: {track_name}\n–ê—Ä—Ç–∏—Å—Ç: {track_artist}\n–°—Å—ã–ª–∫–∞: {track_url}"
        bot.reply_to(message, reply_text)
        track_preview_url = track['preview_url']
        if track_preview_url:
            response = requests.get(track_preview_url)
            bot.reply_to(message, "<b>‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å.\n–¢—Ä–µ–∫ –Ω–∞–π–¥–µ–Ω!</b>", parse_mode ='HTML')
            track_file = BytesIO(response.content)
            track_file.name = f"{track_name} - {track_artist}.mp3"
            bot.send_audio(message.chat.id, track_file)

        else:
            reply_text = f"–¢—Ä–µ–∫: {track_name}\n–ê—Ä—Ç–∏—Å—Ç: {track_artist}\n–°—Å—ã–ª–∫–∞: {track_url}"
            bot.reply_to(message, reply_text)

    else:
        bot.reply_to(message, "<b>‚ùå –ö —Å–æ–∂–µ–ª–µ–Ω–∏—é —Ç—Ä–µ–∫ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É —è –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏.</b>", parse_mode ='HTML')


bot.polling()